"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import google.protobuf.descriptor
import google.protobuf.descriptor_pb2
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.internal.extension_dict
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _VortexIcebergNamespace:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _VortexIcebergNamespaceEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_VortexIcebergNamespace.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    VORTEX_ICEBERG_NAMESPACE_UNSPECIFIED: _VortexIcebergNamespace.ValueType  # 0
    """owner: Zach Brown"""
    VORTEX_ICEBERG_NAMESPACE_COST_MONITORING: _VortexIcebergNamespace.ValueType  # 1
    """owner: Brandon Cole"""
    VORTEX_ICEBERG_NAMESPACE_FUSION: _VortexIcebergNamespace.ValueType  # 2
    """owner: Lukas Schulte"""
    VORTEX_ICEBERG_NAMESPACE_TELEMETRY: _VortexIcebergNamespace.ValueType  # 3
    """owner: Zach Brown"""
    VORTEX_ICEBERG_NAMESPACE_DLQ: _VortexIcebergNamespace.ValueType  # 4
    """owner: Zach Brown
    This is strictly for dead letter queue events and internal use only.
    """
    VORTEX_ICEBERG_NAMESPACE_MANTLE: _VortexIcebergNamespace.ValueType  # 5
    """owner: Zeeshan Qureshi"""

class VortexIcebergNamespace(_VortexIcebergNamespace, metaclass=_VortexIcebergNamespaceEnumTypeWrapper):
    """the set of valid namespaces in the iceberg catalog."""

VORTEX_ICEBERG_NAMESPACE_UNSPECIFIED: VortexIcebergNamespace.ValueType  # 0
"""owner: Zach Brown"""
VORTEX_ICEBERG_NAMESPACE_COST_MONITORING: VortexIcebergNamespace.ValueType  # 1
"""owner: Brandon Cole"""
VORTEX_ICEBERG_NAMESPACE_FUSION: VortexIcebergNamespace.ValueType  # 2
"""owner: Lukas Schulte"""
VORTEX_ICEBERG_NAMESPACE_TELEMETRY: VortexIcebergNamespace.ValueType  # 3
"""owner: Zach Brown"""
VORTEX_ICEBERG_NAMESPACE_DLQ: VortexIcebergNamespace.ValueType  # 4
"""owner: Zach Brown
This is strictly for dead letter queue events and internal use only.
"""
VORTEX_ICEBERG_NAMESPACE_MANTLE: VortexIcebergNamespace.ValueType  # 5
"""owner: Zeeshan Qureshi"""
global___VortexIcebergNamespace = VortexIcebergNamespace

VORTEX_NAMESPACE_FIELD_NUMBER: builtins.int
VORTEX_TABLE_NAME_FIELD_NUMBER: builtins.int
VORTEX_PARTITION_FIELD_FIELD_NUMBER: builtins.int
VORTEX_WRITE_TO_ICEBERG_FIELD_NUMBER: builtins.int
VORTEX_ENABLED_FIELD_NUMBER: builtins.int
vortex_namespace: google.protobuf.internal.extension_dict._ExtensionFieldDescriptor[google.protobuf.descriptor_pb2.MessageOptions, global___VortexIcebergNamespace.ValueType]
"""the namespace to write within the iceberg catalog. it must
be one of the valid values above. adding a new namespace
requires an approval from the vortex team.

if not set, this will default to a namespace called `catchall`.
this is not called `default` because that is a common reserved
keyword in many query engines.
"""
vortex_table_name: google.protobuf.internal.extension_dict._ExtensionFieldDescriptor[google.protobuf.descriptor_pb2.MessageOptions, builtins.str]
"""the table name to write within the specified namespace.
this should only be set in rare circumstances, such as
when a proto is renamed but we want to
"""
vortex_partition_field: google.protobuf.internal.extension_dict._ExtensionFieldDescriptor[google.protobuf.descriptor_pb2.MessageOptions, builtins.int]
"""the field identifier in the message that vortex should use
to partition the message. by default, this will be the
`vortex_event_created_at` field, to ensure that we correctly
partition late-arriving events.

this means that when querying the iceberg table downstream,
queries will be _much_ more efficient when filtering on this
field.

if you override this, it's recommended that you choose a
timestamp field.
"""
vortex_write_to_iceberg: google.protobuf.internal.extension_dict._ExtensionFieldDescriptor[google.protobuf.descriptor_pb2.MessageOptions, builtins.bool]
"""if true, this event should be written to the iceberg table.
if false, this event should be ignored.
default behavior is to treat as true.
"""
vortex_enabled: google.protobuf.internal.extension_dict._ExtensionFieldDescriptor[google.protobuf.descriptor_pb2.MessageOptions, builtins.bool]
"""if true, this event can be ingested by vortex.
if false, vortex will not accept this event or create a table.
default behavior is to treat as false.
"""
